@model Ams.ViewModels.IncomeExpensesReportVm
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}
<div style="width:90%; margin:20px 15px;">
    <div class="row">
        <div class="col-sm-2">
            <a href="" class="text-decoration-none card" style="box-shadow: 0px 0px 6px grey;">
                <div class="card-body">


                    @foreach(var item in Model.CurrentExp)
                    {
                    <h3 class="card-title"><i class="fa-solid fa-money-bill-1-wave" style="margin-right:10px; "></i>Rs.@item.current </h3>
                    }
                    <h7 class="card-text">Total Expenses</h7>



                </div>
            </a>
        </div>
        <div class="col-sm-2">
            <a href="" class="text-decoration-none card" style="box-shadow: 0px 0px 6px grey;">
                <div class="card-body">


                    @foreach (var item in Model.currentInc)
                    {
                    <h3 class="card-title"><i class="fa-solid fa-money-bill-1-wave" style="margin-right:10px; "></i>Rs.@item.current</h3>
                    }
                    <h7 class="card-text">Total Income</h7>



                </div>
            </a>
        </div>
        <div class="col-sm-2">
            <a href="" class="text-decoration-none card" style="box-shadow: 0px 0px 6px grey;">
                <div class="card-body">


                    @foreach (var item in Model.currentpmt)
                    {
                    <h3 class="card-title"><i class="fa-solid fa-money-bill-1-wave" style="margin-right:10px; "></i>Rs.@item.current </h3>
                    }
                    <h7 class="card-text">Total Payment</h7>



                </div>
            </a>
        </div>
        <div class="col-sm-2">
            <a href="" class="text-decoration-none card" style="box-shadow: 0px 0px 6px grey;">
                <div class="card-body">


                    @foreach(var item in Model.currentrcpt)
                    {
                    <h3 class="card-title"><i class="fa-solid fa-money-bill-1-wave" style="margin-right:10px; "></i>Rs.@item.current </h3>
                    }
                    <h7 class="card-text">Total Receipt</h7>



                </div>
            </a>
        </div>
        <div class="col-sm-2">
            <a href="" class="text-decoration-none card" style="box-shadow: 0px 0px 6px grey;">
                <div class="card-body">


                    @foreach(var item in Model.currentCash)
                    {
                    <h3 class="card-title"><i class="fa-solid fa-money-bill-1-wave" style="margin-right:10px; "></i>Rs.@item.remaining_cash </h3>
                    }
                    <h7 class="card-text">Remaining Cash</h7>



                </div>
            </a>
        </div>
        </div>
  
    <div style="display:flex;">
        <div class="card" style="width:50%;  margin-left:1%; margin-top:2%;">
        <h6 style="text-align: center; font-weight:bold; margin-top:2%;" class="card-title">Income & Expenses</h6>
        <canvas id="chart4"></canvas>
        </div>
         <div class="card" style="width:50%;  margin-left:1%; margin-top:2%;">
        <h6 style="text-align: center; font-weight:bold; margin-top:2%;" class="card-title">Monthly Expenses</h6>
        <canvas id="chart1"></canvas>
        </div>
    </div>
    <div>
        <div class="card" style="width:50%;  margin-left:1%; margin-top:2%;">
            <h6 style="text-align: center; font-weight:bold; margin-top:2%;" class="card-title">Monthly Income</h6>
            <canvas id="chart2"></canvas>
        </div>
    </div>
    </div>
   
 
        
<script>
    document.addEventListener('DOMContentLoaded', function () {
        createChart4();
        createChart1();
        createChart2();

    });

    function createChart4() {
    @{
        // Initialize arrays for labels and dataValues
        var dataValue1 = new List<decimal>();
        var dataValue2 = new List<decimal>();

        // Populate labels and dataValues from Model.ExpGraph
        foreach (var item in Model.TotalExpenses)
        {
            dataValue1.Add(@item.total_expenses);
        }
        foreach (var item in Model.TotalIncome)
        {
            dataValue2.Add(@item.total_income);
        }
    }

        var data = {
            labels: ['Expenses', 'Income'],
            datasets: [
                {
                    label: 'Expenses',
                    data: @Html.Raw(Json.Serialize(new List<List<decimal>> { dataValue1, dataValue2 })),
                    backgroundColor: ['rgb(255, 99, 132)', 'rgb(50,205,50)'],
                    hoverOffset: 4
                }
            ]
        };

        const config = {
            type: 'doughnut',
            data: data,
            options: {
                aspectRatio: 2
            }
        };

        const ctx = document.getElementById('chart4').getContext('2d');
        var chart4 = new Chart(ctx, config);
    }

    function createChart1()
    {
    @{
        // Initialize arrays for labels and dataValues
        var labels = new List<string>();
        var dataValues = new List<decimal>();

        // Populate labels and dataValues from Model.ExpGraph
        foreach (var item in Model.ExpGraph)
        {
            labels.Add(@item.month_name);
            dataValues.Add(@item.amount);
        }
    }
            var data = {
        labels: @Html.Raw(Json.Serialize(labels)),
        datasets: [{
            label: 'Monthly Expenses',
            data: @Html.Raw(Json.Serialize(dataValues)),
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 2,
            fill: false
        }]
    };

    // Configuration options
    var config = {
        type: 'line',
        data: data,
    };

   
    var ctx2 = document.getElementById('chart1').getContext('2d');


    var chart1 = new Chart(ctx2, config);
    }
    function createChart2() {
    @{
        // Initialize arrays for labels and dataValues
        var Ilabels = new List<string>();
        var IdataValues = new List<decimal>();

        // Populate labels and dataValues from Model.ExpGraph
        foreach (var item in Model.IncGraph)
        {
            Ilabels.Add(@item.month_name);
            IdataValues.Add(@item.amount);
        }
    }
                var data = {
            labels: @Html.Raw(Json.Serialize(Ilabels)),
            datasets: [{
                label: 'Monthly Expenses',
                data: @Html.Raw(Json.Serialize(IdataValues)),
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: false
            }]
        };

        // Configuration options
        var config = {
            type: 'line',
            data: data,
        };


        var ctx3 = document.getElementById('chart2').getContext('2d');


        var chart2 = new Chart(ctx3, config);
    }
</script>

